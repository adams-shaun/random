---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serviceentries.networking.aspenmesh.io
spec:
  group: networking.aspenmesh.io
  names:
    kind: ServiceEntry
    listKind: ServiceEntryList
    plural: serviceentries
    singular: serviceentry
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: ServiceEntry is the Schema for the serviceentries API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceEntrySpec defines the desired state of ServiceEntry
            properties:
              addresses:
                description: The virtual IP addresses associated with the service.
                  Could be CIDR prefix. For HTTP traffic, generated route configurations
                  will include http route domains for both the `addresses` and `hosts`
                  field values and the destination will be identified based on the
                  HTTP Host/Authority header. If one or more IP addresses are specified,
                  the incoming traffic will be identified as belonging to this service
                  if the destination IP matches the IP/CIDRs specified in the addresses
                  field. If the Addresses field is empty, traffic will be identified
                  solely based on the destination port. In such scenarios, the port
                  on which the service is being accessed must not be shared by any
                  other service in the mesh. In other words, the sidecar will behave
                  as a simple TCP proxy, forwarding incoming traffic on a specified
                  port to the specified destination endpoint IP/host. Unix domain
                  socket addresses are not supported in this field.
                items:
                  type: string
                type: array
              endpoints:
                description: One or more endpoints associated with the service. Only
                  one of `endpoints` or `workloadSelector` can be specified.
                items:
                  properties:
                    address:
                      description: Address associated with the network endpoint without
                        the port.  Domain names can be used if and only if the resolution
                        is set to DNS, and must be fully-qualified without wildcards.
                        Use the form unix:///absolute/path/to/socket for Unix domain
                        socket endpoints.
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: One or more labels associated with the endpoint.
                      type: object
                    locality:
                      description: The locality associated with the endpoint. A locality
                        corresponds to a failure domain (e.g., country/region/zone).
                        Arbitrary failure domain hierarchies can be represented by
                        separating each encapsulating failure domain by /. For example,
                        the locality of an an endpoint in US, in US-East-1 region,
                        within availability zone az-1, in data center rack r11 can
                        be represented as us/us-east-1/az-1/r11. Istio will configure
                        the sidecar to route to endpoints within the same locality
                        as the sidecar. If none of the endpoints in the locality are
                        available, endpoints parent locality (but within the same
                        network ID) will be chosen. For example, if there are two
                        endpoints in same network (networkID "n1"), say e1 with locality
                        us/us-east-1/az-1/r11 and e2 with locality us/us-east-1/az-2/r12,
                        a sidecar from us/us-east-1/az-1/r11 locality will prefer
                        e1 from the same locality over e2 from a different locality.
                        Endpoint e2 could be the IP associated with a gateway (that
                        bridges networks n1 and n2), or the IP associated with a standard
                        service endpoint.
                      type: string
                    network:
                      description: Network enables Istio to group endpoints resident
                        in the same L3 domain/network. All endpoints in the same network
                        are assumed to be directly reachable from one another. When
                        endpoints in different networks cannot reach each other directly,
                        an Istio Gateway can be used to establish connectivity (usually
                        using the `AUTO_PASSTHROUGH` mode in a Gateway Server). This
                        is an advanced configuration used typically for spanning an
                        Istio mesh over multiple clusters.
                      type: string
                    ports:
                      additionalProperties:
                        format: int32
                        type: integer
                      description: "Set of ports associated with the endpoint. If
                        the port map is specified, it must be a map of servicePortName
                        to this endpoint's port, such that traffic to the service
                        port will be forwarded to the endpoint port that maps to the
                        service's portName. If omitted, and the targetPort is specified
                        as part of the service's port specification, traffic to the
                        service port will be forwarded to one of the endpoints on
                        the specified `targetPort`. If both the targetPort and endpoint's
                        port map are not specified, traffic to a service port will
                        be forwarded to one of the endpoints on the same port. \n
                        **NOTE 1:** Do not use for `unix://` addresses. \n **NOTE
                        2:** endpoint port map takes precedence over targetPort."
                      type: object
                    service_account:
                      description: The service account associated with the workload
                        if a sidecar is present in the workload. The service account
                        must be present in the same namespace as the configuration
                        ( WorkloadEntry or a ServiceEntry)
                      type: string
                    weight:
                      description: The load balancing weight associated with the endpoint.
                        Endpoints with higher weights will receive proportionally
                        higher traffic.
                      format: int32
                      type: integer
                  type: object
                type: array
              export_to:
                description: "A list of namespaces to which this service is exported.
                  Exporting a service allows it to be used by sidecars, gateways and
                  virtual services defined in other namespaces. This feature provides
                  a mechanism for service owners and mesh administrators to control
                  the visibility of services across namespace boundaries. \n If no
                  namespaces are specified then the service is exported to all namespaces
                  by default. \n The value \".\" is reserved and defines an export
                  to the same namespace that the service is declared in. Similarly
                  the value \"*\" is reserved and defines an export to all namespaces.
                  \n For a Kubernetes Service, the equivalent effect can be achieved
                  by setting the annotation \"networking.istio.io/exportTo\" to a
                  comma-separated list of namespace names."
                items:
                  type: string
                type: array
              hosts:
                items:
                  type: string
                type: array
              location:
                description: Specify whether the service should be considered external
                  to the mesh or part of the mesh.
                format: int32
                type: integer
              ports:
                description: The ports associated with the external service. If the
                  Endpoints are Unix domain socket addresses, there must be exactly
                  one port.
                items:
                  properties:
                    name:
                      description: Label assigned to the port.
                      type: string
                    number:
                      description: A valid non-negative integer port number.
                      format: int32
                      type: integer
                    protocol:
                      description: The protocol exposed on the port. MUST BE one of
                        HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS. TLS implies the connection
                        will be routed based on the SNI header to the destination
                        without terminating the TLS connection.
                      type: string
                    target_port:
                      description: The port number on the endpoint where the traffic
                        will be received. Applicable only when used with ServiceEntries.
                      format: int32
                      type: integer
                  type: object
                type: array
              resolution:
                description: Service discovery mode for the hosts. Care must be taken
                  when setting the resolution mode to NONE for a TCP port without
                  accompanying IP addresses. In such cases, traffic to any IP on said
                  port will be allowed (i.e. `0.0.0.0:<port>`).
                format: int32
                type: integer
              subject_alt_names:
                description: "If specified, the proxy will verify that the server
                  certificate's subject alternate name matches one of the specified
                  values. \n NOTE: When using the workloadEntry with workloadSelectors,
                  the service account specified in the workloadEntry will also be
                  used to derive the additional subject alternate names that should
                  be verified."
                items:
                  type: string
                type: array
              workload_selector:
                description: Applicable only for MESH_INTERNAL services. Only one
                  of `endpoints` or `workloadSelector` can be specified. Selects one
                  or more Kubernetes pods or VM workloads (specified using `WorkloadEntry`)
                  based on their labels. The `WorkloadEntry` object representing the
                  VMs should be defined in the same namespace as the ServiceEntry.
                properties:
                  labels:
                    additionalProperties:
                      type: string
                    description: One or more labels that indicate a specific set of
                      pods/VMs on which the configuration should be applied. The scope
                      of label search is restricted to the configuration namespace
                      in which the the resource is present.
                    type: object
                type: object
            type: object
          status:
            description: ServiceEntryStatus defines the observed state of ServiceEntry
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
